version: '3'

services:
  postgresql_server:
    container_name: poc_postgresql_server
    image: postgres:10.5
    restart: always
    env_file:
      - ./config/env/.common.env
    volumes:
      - poc_volume_postgresql:/var/lib/postgresql/data
    ports:
      - 7071:5432
    networks:
      - poc_network

  postgresql_adminer:
    container_name: poc_postgresql_adminer
    image: adminer
    restart: always
    ports:
      - 9091:8080
    networks:
      - poc_network
    depends_on:
      - postgresql_server

  rabbitmq_server:
    container_name: poc_rabbitmq_server
    restart: always
    build:
      context: ./services/ds-rabbitmq
    env_file:
      - ./config/env/.common.env
    ports:
      - 7072:5672
      - 9092:15672
    networks:
      - poc_network

  redis_server:
    container_name: poc_redis_server
    image: redis:4.0.11
    entrypoint: redis-server --appendonly yes
    restart: always
    volumes:
      - poc_volume_redis:/data
    ports:
      - 7073:6379
    networks:
      - poc_network

  redis_commander:
    container_name: poc_redis_commander
    image: rediscommander/redis-commander:latest
    restart: always
    env_file:
      - ./config/env/.docker.env
    ports:
      - 9093:8081
    networks:
      - poc_network
    depends_on:
      - redis_server

  sandbox:
    container_name: poc_sandbox
    image: node:8.11.4-alpine
    restart: always
    command: /bin/sh -c "npm install && tail -f /dev/null"
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    networks:
      - poc_network
    depends_on:
      - postgresql_server
      - rabbitmq_server
      - redis_server

  api:
    container_name: poc_api
    restart: always
    build:
      context: ./services/be-api
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    volumes:
      - ./libraries:/usr/src/api/src/lib
    ports:
      - 7070:7070
    networks:
      - poc_network
    depends_on:
      - postgresql_server
      - rabbitmq_server
      - redis_server

  socket:
    container_name: poc_socket
    restart: always
    build:
      context: ./services/be-socket
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    volumes:
      - ./libraries:/usr/src/socket/src/lib
    ports:
      - 7080:7080
    networks:
      - poc_network
    depends_on:
      - postgresql_server
      - rabbitmq_server
      - redis_server

  worker:
    container_name: poc_worker
    restart: always
    build:
      context: ./services/be-worker
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    volumes:
      - ./libraries:/usr/src/worker/src/lib
    networks:
      - poc_network
    depends_on:
      - postgresql_server
      - rabbitmq_server
      - redis_server

  panel:
    container_name: poc_panel
    restart: always
    build:
      context: ./services/fe-panel
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    volumes:
      - ./libraries:/usr/src/panel/src/lib
    ports:
      - 9090:9090
    networks:
      - poc_network

  exmathservice:
    container_name: poc_exmathservice
    restart: always
    build:
      context: ./services/ex-math-service
    env_file:
      - ./config/env/.common.env
      - ./config/env/.docker.env
    volumes:
      - ./libraries:/usr/src/ex-math-service/src/lib
    ports:
      - 7090:7090
    networks:
      - poc_network

volumes:
  poc_volume_postgresql:
  poc_volume_rabbitmq:
  poc_volume_redis:

networks:
  poc_network:
    driver: bridge